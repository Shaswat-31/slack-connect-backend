generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRoles{
  user
}
enum MessageType{
    immediately 
    scheduled
}
enum MessageBy{
    user 
    bot
}
model User {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  email     String             @unique
  password  String
  name      String?
  role      UserRoles             @default(user)
  
  slack     SlackIntegration?
  messages  Message[]
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

model SlackIntegration {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @unique @db.ObjectId 

  accessToken  String
  refreshToken String?
  scope        String?
  botUserId    String?
  teamId       String
  teamName     String
  userAccessToken  String?
  userRefreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Message{
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId 

  slackMessageId String?
  slackChannelId String?
  messageText   String? 
  postAt     String?

  messageType  MessageType @default(immediately)
  messageBy  MessageBy  @default(user)

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}